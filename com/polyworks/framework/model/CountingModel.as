package com.polyworks.framework.model {	import com.polyworks.framework.events.ModelEvent;			public class CountingModel extends Model implements ICountingModel {		private var _numOf:int;		private var _looping:Boolean = false;		private var _index:Number;		private var _prevIndex:Number;				private var _modelChange:ModelEvent = new ModelEvent( ModelEvent.MODEL_CHANGE );				private var _hideLessButton:ModelEvent = new ModelEvent( ModelEvent.HIDE_LESS );				private var _hideMoreButton:ModelEvent = new ModelEvent( ModelEvent.HIDE_MORE );				private var _showLessButton:ModelEvent = new ModelEvent( ModelEvent.SHOW_LESS );				private var _showMoreButton:ModelEvent = new ModelEvent( ModelEvent.SHOW_MORE );				public function set index( value:Number ):void {			if( numOf ){				if( isNaN( value ) && value !== _index ){					prevIndex = _index;					_index = value;									evtCenter.dispatchEvent( modelChange );									prevIndex = value;				} else if ( value !== _index && value < numOf && value > -1 ){					if( !isNaN( _index ) ){						prevIndex = _index;					};					_index = value;					evtCenter.dispatchEvent( modelChange );									if( !looping ){						controlMoreAndLess();					};								} else if( value !== _index ) {					controlCurIndex( value );				};			} else {				throw new Error( "You have to set numOf in your counting model first" );			};		};		public function get index():Number {			return _index;		};				public function get prevIndex():Number { 			return _prevIndex; 		};		public function set prevIndex( value:Number ):void {			if( value !== _prevIndex ){				_prevIndex = value;			};		};				public function set numOf( value:int ):void {			_numOf = value;		};		public function get numOf():int {			return _numOf;		};				public function set looping( value:Boolean ):void {			_looping = value;		};		public function get looping():Boolean {			return _looping;		};				public function get modelChange():ModelEvent {			return _modelChange;		};				public function get hideLessButton():ModelEvent {			return _hideLessButton;		};				public function get hideMoreButton():ModelEvent {			return _hideMoreButton;		};				public function get showLessButton():ModelEvent {			return _showLessButton;		};				public function get showMoreButton():ModelEvent {			return _showMoreButton;		};		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++				public function CountingModel( modelName:String ):void {			super( modelName );		};				//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++		public function initMe():void {					};				public function controlCurIndex( value:Number ):void {			if( looping ){				if( value >= numOf ){					index = 0;				} else if( value < 0 ){					index = numOf - 1;				};			} else {				if( value >= numOf ){					index = numOf - 1;				} else if( value < 0 ){					index = 0;				};			};		};				public function controlMoreAndLess():void {			if( index >= numOf - 1 ){				evtCenter.dispatchEvent( showLessButton );				evtCenter.dispatchEvent( hideMoreButton );			} else if( index <= 0 ){				evtCenter.dispatchEvent( hideLessButton );				evtCenter.dispatchEvent( showMoreButton );			} else {				evtCenter.dispatchEvent( showLessButton );				evtCenter.dispatchEvent( showMoreButton );			};		};			};};