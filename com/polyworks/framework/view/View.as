////  View////  Created by polyphonic13 on 2009-11-05.//  Copyright (c) 2009 factor13. All rights reserved.////	@extends Sprite//	@implements com.polyworks.framework.view.IView// usage:/*	public class TestViewOne extends View	{		public function TestViewOne(name:String, tgt:Sprite)		{			super(name, tgt); 			hide(); 			_init(); 			TestModel.getInstance().addEventListener(EventList.VIEWS_POSITIONED, _viewsPositioned); 		}			private function _init():void 		{			with(this.graphics)			{				beginFill(0x000000); 				lineTo(50, 0); 				lineTo(50, 50); 				lineTo(0, 50); 				lineTo(0, 0);				endFill(); 			}			_initUI();		}		private function _viewsPositioned(evt:Event):void 		{			show(); 			TestModel.getInstance().removeEventListener(EventList.VIEWS_POSITIONED, _viewsPositioned);		}			private function _initUI():void 		{			this.buttonMode = true;			this.addEventListener(MouseEvent.CLICK, _onClick); 		}			private function _onClick(evt:MouseEvent):void 		{			_fireEvent(new Event(EventList.TEST_VIEW_ONE_CLICK)); 		}		private function _fireEvent(evt:Event):void		{			TestEventCenter.getInstance().dispatchEvent(event); 		}	}*/package com.polyworks.framework.view{	import flash.display.Sprite; 	import flash.geom.Point; 	import com.polyworks.framework.view.display.SuperSprite;	import flash.events.Event;		public class View extends SuperSprite implements IView	{		private var _name:String; 		private var _tgt:Sprite		private var _hidden:Boolean; 				public function View(name:String, tgt:Sprite, addToTarget:Boolean = true)		{			//trace("~~~~~~~~~~ View/constructor\n\tname = " + name);			_name = name; 			_tgt = tgt;			if(addToTarget) { _tgt.addChild(this); }			_hidden = false; 		}				public function get view():Sprite { return this; } 		public function get id():String { return _name; }		public function get tgt():Sprite { return _tgt; }		public function get hidden():Boolean { return _hidden; }		public function get viewName():String { 			return _name; 		};				public function show():void		{			if (_hidden) 			{				this.visible = true;				_hidden = false;			}		}		public function hide():void		{                      			if (!_hidden) 			{				this.visible = false;				//trace("this = " + this + ", visible = " + this.visible);				_hidden = true;			}		}		public function setPosition(pt:Point):void		{			this.x = pt.x;			this.y = pt.y;		}		public function get position():Point		{			return new Point(this.x, this.y);		}		public function setSize(w:Number, h:Number):void		{			this.width = w;			this.height = h;		}		public function get size():Point		{			return new Point(this.width, this.height);		}				public function remove():void 		{			_tgt.removeChild(this); 		}				public function update( e:Event = null ):void 		{					}	}}